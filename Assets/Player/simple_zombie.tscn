[gd_scene load_steps=6 format=3 uid="uid://cj5v1qvcta01c"]

[ext_resource type="PackedScene" uid="uid://ccctugrh8a8a4" path="res://Assets/Simple_zombie.glb" id="1_olude"]
[ext_resource type="AnimationLibrary" uid="uid://dwka0podvhgpc" path="res://Assets/Anims/Locomotion-Library.res" id="2_ff2cn"]
[ext_resource type="AnimationLibrary" uid="uid://tm3vpuvbe0rc" path="res://Assets/Anims/Melee-Library.res" id="3_gvtbc"]

[sub_resource type="GDScript" id="GDScript_6on8i"]
resource_name = "zombie_script"
script/source = "extends CharacterBody3D
@onready var animation_player = $AnimationPlayer
@onready var armature_001 = $Armature_001



const SPEED = 10.0
const JUMP_VELOCITY = 10
@onready var tp_camera_mount = $tp_camera_mount
# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")
var sensitivity = 0.1
var captured = true
var running_speed = 1.0
var anim_lock = false


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"Quit\"):
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
		captured = false
		pass
		
func _input(event):
	if event is InputEventMouseMotion and captured:
		rotate_y(deg_to_rad(-event.relative.x *sensitivity))
		armature_001.rotate_y(deg_to_rad(event.relative.x *sensitivity))
		tp_camera_mount.rotate_x(deg_to_rad(-event.relative.y*sensitivity))
	if event is InputEventMouseButton:
			Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
			captured = true		
		
		
func _physics_process(delta):
	# Add the gravity.
	if !animation_player.is_playing():
		anim_lock = false
	if not is_on_floor():
		velocity.y -= gravity * delta
		animation_player.play('Locomotion-Library/jump')
		anim_lock = true

	# Handle Ju mp.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		anim_lock = true
		animation_player.play('Locomotion-Library/jump-short')
		velocity.y = JUMP_VELOCITY
	if Input.is_action_pressed(\"Run\") and is_on_floor():
		running_speed = 2
	else:
		running_speed = 1.0

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"Left\", \"Right\", \"Forward\", \"Back\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED *running_speed
		velocity.z = direction.z * SPEED *running_speed
		armature_001.rotation.y = lerp_angle(armature_001.rotation.y, atan2(-input_dir.x, -input_dir.y), .25) 
		if(animation_player.current_animation !='walk' and running_speed==1.0):
			if(!anim_lock):
				animation_player.play('Locomotion-Library/walk')
		else:
			if(!anim_lock):
				animation_player.play('Locomotion-Library/run')
	else:
		if(!anim_lock):
			if(animation_player.current_animation !='Locomotion-Library/idle1'):
				animation_player.play('Locomotion-Library/idle1')
		velocity.x = move_toward(velocity.x, 0, SPEED) *running_speed
		velocity.z = move_toward(velocity.z, 0, SPEED) *running_speed

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_qh4xg"]
radius = 0.8
height = 4.2

[node name="Simple_zombie" instance=ExtResource("1_olude")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.00478, 0)
script = SubResource("GDScript_6on8i")

[node name="GeneralSkeleton" parent="Armature_001" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(-0.00045252, 0.250753, -0.0243482)
bones/0/rotation = Quaternion(0.101056, 0.00222472, -0.00836191, 0.994843)
bones/1/rotation = Quaternion(0, 0, 0, 1)
bones/2/rotation = Quaternion(-1.86265e-09, 0, 0, 1)
bones/3/rotation = Quaternion(1.86265e-09, 0, 0, 1)
bones/5/rotation = Quaternion(0.042094, 0.00559564, -0.00419821, 0.999089)
bones/7/rotation = Quaternion(0.5, 0.5, 0.5, -0.5)
bones/8/rotation = Quaternion(0.458432, 0.749288, -0.359684, 0.314698)
bones/8/scale = Vector3(1, 1, 1)
bones/9/rotation = Quaternion(0.503766, -0.47598, 0.567713, 0.444258)
bones/9/scale = Vector3(1.00164, 0.962872, 1.03733)
bones/10/rotation = Quaternion(0.0165852, 0.501238, -0.00368117, 0.865143)
bones/10/scale = Vector3(1, 1, 1)
bones/11/rotation = Quaternion(0.5, -0.5, -0.5, -0.5)
bones/12/rotation = Quaternion(-0.105216, 0.811841, -0.570653, -0.0648031)
bones/12/scale = Vector3(1, 1, 1)
bones/13/rotation = Quaternion(0.57407, 0.372515, -0.646942, 0.336366)
bones/13/scale = Vector3(1, 1, 1)
bones/14/rotation = Quaternion(-0.0419036, -0.558041, -0.085588, 0.824324)
bones/14/scale = Vector3(1, 1, 1)
bones/15/rotation = Quaternion(-0.00342126, 0.407184, 0.912267, -0.04426)
bones/15/scale = Vector3(1.01964, 0.961154, 1.02048)
bones/16/rotation = Quaternion(0.000764521, 0.926665, -0.375745, -0.0103408)
bones/16/scale = Vector3(1.00986, 0.945212, 1.04954)
bones/17/rotation = Quaternion(-0.0277555, 0.657549, -0.752467, 0.0255316)
bones/17/scale = Vector3(0.982529, 1.00411, 1.01594)
bones/18/rotation = Quaternion(-1.64636e-10, 1, 0, -1.64636e-10)
bones/18/scale = Vector3(0.99996, 1.00003, 1.00001)
bones/19/position = Vector3(0.0811778, 0.166388, 0.000133674)
bones/20/rotation = Quaternion(0.00336914, 0.226803, 0.97302, 0.0422073)
bones/20/scale = Vector3(1.01686, 0.966538, 1.01756)
bones/21/rotation = Quaternion(-0.000773206, 0.924922, -0.380013, 0.0104582)
bones/21/scale = Vector3(1.00861, 0.952945, 1.04187)
bones/22/rotation = Quaternion(-0.115761, 0.486338, -0.815013, -0.292965)
bones/22/scale = Vector3(0.982252, 1.00441, 1.01524)
bones/23/rotation = Quaternion(1.64636e-10, 1, 0, 1.64636e-10)
bones/23/scale = Vector3(0.999985, 1.00001, 1)
bones/24/position = Vector3(-0.0811779, 0.168094, 0.000137593)

[node name="Player_003" parent="Armature_001/GeneralSkeleton" index="0"]
cast_shadow = 2

[node name="AnimationPlayer" parent="." index="1"]
playback_default_blend_time = 0.3
libraries = {
"Locomotion-Library": ExtResource("2_ff2cn"),
"Melee-Library": ExtResource("3_gvtbc")
}

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0185906, 0.686105, 0)
shape = SubResource("CapsuleShape3D_qh4xg")

[node name="tp_camera_mount" type="Node3D" parent="." index="3"]
transform = Transform3D(1, 0, 0, 0, 0.995311, 0.0967317, 0, -0.0967317, 0.995311, 0, 3.41751, 4)

[node name="Camera3D" type="Camera3D" parent="tp_camera_mount" index="0"]
fov = 100.0
